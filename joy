#!/usr/bin/env bash

Ext=lua
Exe=lua

Root=$(git rev-parse --show-toplevel)
Doc=$Root/docs

# end config
# ----------------------------------------
# generate executables

doc() {  
  gawk -v name="$1"  '
  NR<4                { next }
  sub(/^#!class /,"") { print "<img src=\"http://yuml.me/diagram/plain;dir:lr/class/"$0"\">"; next}
  sub(/^--\[\[/,"")   { if(CODE) print "```"; CODE=0; next }
  sub(/^--\]\]/,"")   { CODE=1; print "```lua" ; next }
  BEGIN               { print  "---\ntitle: " name "\n---\n\n"top "\n\n# " name }
                      { print }
  END                 { if (CODE) print "```";  } '

}


toc() {
  cd $Doc; cat <<-EOF
	---
	title: Contents
	---
	EOF
   if [ -f "$Root/src/README.md" ]; then
      cat $Root/src/README.md
   fi
   cat <<-EOF

	## Stuff to bring you joy

	EOF
   for i in $(ls $Doc/[^A-Z]*.md); do 
        ok="ok\.md$"
    	if [[ ! $i =~ $ok ]]; then
          f=$(basename $i)
 	   g=${f%.*}
    	  echo "- [$g]($f): " ; 
          grep "^##" $i  | head -1 | sed 's/^##//'
        fi 
   done
   echo ""
   echo "---"
   echo ""
}
_c0="\033[00m"     # white
_c1="\033[01;32m"  # green
_c2="\033[01;34m"  # blue
_c3="\033[31m"     # red
_c5="\033[35m"     # purple
_c6="\033[33m"     # yellow
_c7="\033[36m"     # turquoise
_c8="\033[96m"     # magenta


help() { echo -en "${_c3}"; 
	 echo -e "usage: ../fun [Option]${_c6}"
	 cat<<-'EOF'

	Options:
	../fun Test     run all the *.ok files
	../fun Push     push source to Github
	../fun Pull     grab source from Github
	../fun Help     print this text
	../fun xxx.fun  run xxx.fun (but first, update all files)
	../fun          update all files
EOF
	echo -en "${_c0}"
}

# ----------------------------------------
# do the work

mkdir -p $Doc

files=$(find $Root -name "*.$Ext")

for i in $files;do
  f=$(basename $i)
  stem=${f%.$Ext}
  doc1=$Doc/$stem.md
  if [ "$i" -nt "$doc1" ]; then cat $i  | doc $f > $doc1; fi
done

toc > $Doc/index.md
chmod +x $files 

if   [ "$1" = "Test" ]
then for f in $Root/src/*ok.$Ext; do 
       echo ""; echo "---| $(basename $f) |------------"; echo "";
       $Exe $f
     done |  gawk '
     1 
     $2 ~ /PASSED/ {p++} 
     $2 ~ /FAILED/ {f++} 
     END           {print "#PASSED: " p " FAILED: " f " %: " int(p*100/(p+f+0.001))
                    if (f> 1) exit 1
                   }'
     exit $?
elif [ "$1" = "Pull" ]
then git pull;                                    
elif [ "$1" = "Push" ]
then git commit -am commit; git push; git status; 
elif [ "$1" = "Help" ]
then help
elif [ -n "$1"       ] 
then  $Eze $1
fi
